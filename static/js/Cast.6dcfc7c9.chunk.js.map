{"version":3,"sources":["Views/Cast/Cast.js","Views/Cast/Cast.module.css"],"names":["Cast","movieId","useState","cast","setCast","useEffect","getCast","then","data","window","scrollTo","top","document","documentElement","scrollHeight","behavior","catch","error","toast","className","s","castList","map","id","name","profile_path","castItem","castName","src","noImage","alt","castImage","Spinner","module","exports"],"mappings":"kRAyDeA,EAjDF,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACZ,EAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAgBA,OAdAC,qBAAU,WACNC,YAAQL,GACHM,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACLJ,EAAQI,EAAKL,MACbM,OAAOC,SAAS,CACZC,IAAKC,SAASC,gBAAgBC,aAC9BC,SAAU,cAGjBC,OAAM,SAAAC,GAAK,OACRC,IAAMD,MAAM,iDAErB,CAAChB,IAGA,kCACME,EAGEA,GACI,oBAAIgB,UAAWC,IAAEC,SAAjB,SACKlB,EAAKmB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAb,OACN,qBAAaN,UAAWC,IAAEM,SAA1B,UACI,mBAAGP,UAAWC,IAAEO,SAAhB,SAA2BH,IAC3B,qBACII,IACIH,EAAY,0CAC6BA,GACnCI,IAEVC,IAAKN,EACLL,UAAWC,IAAEW,cATZR,QALrB,cAACS,EAAA,EAAD,Q,mBC3BhBC,EAAOC,QAAU,CAAC,SAAW,uBAAuB,UAAY,wBAAwB,SAAW,uBAAuB,SAAW","file":"static/js/Cast.6dcfc7c9.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useEffect, useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport Spinner from '../../components/Spinner';\r\nimport noImage from '../../Images/default.jpg';\r\nimport { getCast } from '../../Service/ServiceApi';\r\nimport s from './Cast.module.css';\r\n\r\nconst Cast = ({ movieId }) => {\r\n    const [cast, setCast] = useState(null);\r\n\r\n    useEffect(() => {\r\n        getCast(movieId)\r\n            .then(({ data }) => {\r\n                setCast(data.cast);\r\n                window.scrollTo({\r\n                    top: document.documentElement.scrollHeight,\r\n                    behavior: 'smooth',\r\n                });\r\n            })\r\n            .catch(error =>\r\n                toast.error('Something wrong! Please, try again later'),\r\n            );\r\n    }, [movieId]);\r\n\r\n    return (\r\n        <section>\r\n            {!cast ? (\r\n                <Spinner />\r\n            ) : (\r\n                cast && (\r\n                    <ul className={s.castList}>\r\n                        {cast.map(({ id, name, profile_path }) => (\r\n                            <li key={id} className={s.castItem}>\r\n                                <p className={s.castName}>{name}</p>\r\n                                <img\r\n                                    src={\r\n                                        profile_path\r\n                                            ? `https://image.tmdb.org/t/p/w300/${profile_path}`\r\n                                            : noImage\r\n                                    }\r\n                                    alt={name}\r\n                                    className={s.castImage}\r\n                                />\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                )\r\n            )}\r\n        </section>\r\n    );\r\n};\r\n\r\nCast.propTypes = {\r\n    movieId: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Cast;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"castList\":\"Cast_castList__1hF4C\",\"castImage\":\"Cast_castImage__3dvdx\",\"castItem\":\"Cast_castItem__1B6kr\",\"castName\":\"Cast_castName__2Somy\"};"],"sourceRoot":""}